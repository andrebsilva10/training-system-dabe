#!/usr/bin/env bash

set -o errexit
set -o pipefail

source .env

function ps {
    docker compose ps
}

function up {
    docker compose up "${@}"
}

function down {
    docker compose down "${@}"
}

function composer {
    docker run --rm -u "$(id -u):$(id -g)" -v "$(pwd):/app" -w /app composer:2.6.3 composer "${@}"
}

function nginx:check {
    docker compose exec web nginx -t
}

function nginx:reload {
    docker compose exec web nginx -s reload
}

function nginx:status {
    docker compose exec web service nginx status
}

function test {
    TEST_PATH="${@:-tests}"
    docker compose run --rm php ./vendor/bin/phpunit --color ${TEST_PATH}
}

function phpcs {
    TEST_PATH="${@:-.}"
    docker compose run --rm php ./vendor/bin/phpcs ${TEST_PATH}
}

function phpcbf {
    TEST_PATH="${@:-.}"
    docker compose run --rm php ./vendor/bin/phpcbf ${TEST_PATH}
}

function db:reset {
    docker compose cp database/schema.sql db:/tmp/
    docker compose exec db sh -c "MYSQL_PWD=${DB_PASSWORD} mysql -u ${DB_USERNAME} ${DB_DATABASE} --default-character-set utf8mb4 < /tmp/schema.sql"

    docker compose cp database/populate/data.sql db:/tmp/
    docker compose exec db sh -c "MYSQL_PWD=${DB_PASSWORD} mysql -u ${DB_USERNAME} ${DB_DATABASE} --default-character-set utf8mb4 < /tmp/data.sql"
}

function mysql {
    docker compose exec db sh -c "MYSQL_PWD=${DB_PASSWORD} mysql -u ${DB_USERNAME} ${DB_DATABASE} --default-character-set utf8mb4"
}

TIMEFORMAT=$'\nTraining completed in %3lR'
time "${@}"
